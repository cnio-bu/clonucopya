import pandas as pd
from snakemake.io import expand, touch
from glob import glob
import os

###### Config file and sample sheets #####

configfile: "../config/config_multi_vcf.yaml"


##### Target rules #####

# Get sample names from mutation files
SAMPLES = glob_wildcards(os.path.join(config["samples"]["mutations"], 
                        "{sample}.mut.vcf")).sample



# Define target rule
rule all:
    input:
        expand("results/mutation_prep/{sample}_prep.mut.tsv", sample=SAMPLES),
        expand("results/cnv_prep/{sample}_prep.cnv.tsv", sample=SAMPLES),
        expand("results/pyclone-vi_prep/{sample}_intersect_pvi.tsv", sample=SAMPLES),
        expand("results/pyclone-vi/{sample}_pvi_out.tsv", sample=SAMPLES),
#        expand("results/pvi_vep_prep/{sample}", sample=SAMPLES),
        expand("results/pvi_vep_prep/{sample}_cluster_0.tsv", sample=SAMPLES),
        expand("results/vep_annotation/{sample}_cluster_0.vcf", sample=SAMPLES),
#        expand("results/vep_annotation/{sample}/{sample}_{cluster}.vcf", sample=SAMPLES,  cluster=get_cluster_numbers),



# FORMAT MUTATION VCF

include: "rules/01_mutation_prep.smk"


# CALCULATE CN AND FORMAT CNVs

include: "rules/02_cnv_prep.smk"


# INTERSECT MUTATIONS AND CNVs

include: "rules/03_pyclone-vi_prep.smk"


# RUN PYCLONE-VI SUBCLONAL INFERENCE

include: "rules/04_pyclone-vi.smk"


# FORMAT PYCLONE-VI OUTPUT FOR ENSEMBL-VEP

include: "rules/05_pvi_vep_prep.smk"

# DOWNLOAD ENSEMBL-VEP CACHE

#include: "rules/06_get_vep_cache.smk"

# VEP ANNOTATION PER CLUSTER

include: "rules/07_vep_annotation.smk"

